---
uti: com.xamarin.workbook
id: 29841681-57ba-45fc-9a05-b222890480a9
title: TypedOptionDemo
platforms:
- DotNetCore
packages:
- id: Microsoft.Extensions.Configuration.Binder
  version: 2.2.0
- id: Microsoft.Extensions.Configuration.Json
  version: 2.2.0
- id: Microsoft.Extensions.DependencyInjection
  version: 2.2.0
- id: Microsoft.Extensions.Options
  version: 2.2.0
- id: Microsoft.Extensions.Options.ConfigurationExtensions
  version: 2.2.0
---

```csharp
#r "Newtonsoft.Json"
#r "Microsoft.Extensions.Configuration.Binder"
#r "Microsoft.Extensions.Configuration.Json"
#r "Microsoft.Extensions.DependencyInjection"
#r "Microsoft.Extensions.Options"
#r "Microsoft.Extensions.Options.ConfigurationExtensions"
```

```csharp
using Microsoft.Extensions.Configuration;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Options;
using System.IO;
using Newtonsoft.Json;
```

```csharp
var jsonPath = Path.Combine(Directory.GetCurrentDirectory(), "config.json");
var theConfiguration = new ConfigurationBuilder().AddJsonFile(jsonPath).Build();
```

```csharp
foreach(var entry in theConfiguration.AsEnumerable())
{
    Console.WriteLine($"{entry.Key} => {entry.Value}");
}
```

```csharp
class MyTypedOption {
    public string PropA { get; set; }
    public int PropB { get; set; }
    public double PropC { get; set; }
    public Dictionary<string, string> PropD { get; set;}
    public string[] PropE { get; set;}
}
```

```csharp
var optionConfiguration = theConfiguration.GetSection("TheTypedConfig");
```

```csharp
var myTypedOption = optionConfiguration.Get<MyTypedOption>();
```

```csharp
JsonConvert.SerializeObject(myTypedOption, Formatting.Indented);
```

```csharp
class ConfItem {
    public string PropKey {get;set;}
    public int Value {get;set;}
}
var arrayConfiguration = theConfiguration.GetSection("TheCollecitonConfig");
```

```csharp
List<ConfItem> listTypedOption = arrayConfiguration.Get<List<ConfItem>>();
```

```csharp
var serviceCollection = new ServiceCollection();
```

```csharp
serviceCollection.Configure<MyTypedOption>(optionConfiguration);
serviceCollection.Configure<List<ConfItem>>(arrayConfiguration);
var di_container = serviceCollection.BuildServiceProvider();
```

```csharp
var myTypedOptionMonitor = di_container.GetService<IOptionsMonitor<MyTypedOption>>();
var realTypedOption = myTypedOptionMonitor.CurrentValue;
```

```csharp
var confItemListOptionMonitor = di_container.GetService<IOptionsMonitor<List<ConfItem>>>();
var confItemList = confItemListOptionMonitor.CurrentValue;
```